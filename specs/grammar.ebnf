base_letter = "A" | "B" | "C" | "D" | "E" | "F" | "G"
       | "H" | "I" | "J" | "K" | "L" | "M" | "N"
       | "O" | "P" | "Q" | "R" | "S" | "T" | "U"
       | "V" | "W" | "X" | "Y" | "Z" | "a" | "b"
       | "c" | "d" | "e" | "f" | "g" | "h" | "i"
       | "j" | "k" | "l" | "m" | "n" | "o" | "p"
       | "q" | "r" | "s" | "t" | "u" | "v" | "w"
       | "x" | "y" | "z";

base_digit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9";

base_symbol = "[" | "]" | "{" | "}" | "(" | ")" | "<" | ">"
       | "'" | '"' | "=" | "|" | "." | "," | ";" | "-" 
       | "+" | "*" | "?" | "\n" | "\t" | "\r" | "\f" | "\b";

base_character = base_letter | base_digit | base_symbol | "_" | " " ;
base_S = { " " | "\n" | "\t" | "\r" | "\f" | "\b" } ;

tok_identifier = base_letter , { base_letter | base_digit | "_" } ;
tok_string = '"' , { base_character - '"' | "\\" } , '"' ;
tok_char = "'" , (base_character - "'" | ("\\" ,  base_letter)) , "'";
tok_int64 = base_digit - "0" , { base_digit };
tok_symbol = "[" | "]" | "{" | "}" | "(" | ")" | "<" | ">" | "=" | "+" | "-" | "*" | "/" | "%" | "@";
tok_print = "Print";
tok_print_a_line_of = "Print a line of";
tok_followed_by = "followed by";
tok_except_when = "except when";
tok_read = "Read the" | "Read an" | "Read a" | "Read ";
tok_define_function = "Define function";
tok_let = "Let";
tok_set = "Set";
tok_to = "to";
tok_be = "be";
tok_dot = ".";
tok_which_takes = "which takes the" | "which takes an" | "which takes a";
tok_copy_of = "copy of";
tok_and_store_them_in = "and store them in";
tok_and_returns = "and returns";
tok_type = "int32" | "int64" | "char" | "string";

constant = tok_string | tok_char | tok_int64;
operation = "+" | "-" | "*" | "/" | "%" | "@" | "++";
expr = tok_identifier | constant | ("-" , expr) | (expr , operation , expr );

printopt = tok_followed_by, expr
         | tok_except_when, expr;

printfn = tok_print_a_line_of , expr , { printopt } , tok_dot
        | tok_print , expr , { printopt }, tok_dot;

readfn = tok_read , { base_S } , tok_type , { base_S } , identifier , tok_dot
       | tok_read , expr , { base_S } , tok_type , [ "s" ] , tok_and_store_them_in , identifier , tok_dot;

fndecl = tok_define_function , { base_S } , identifier , { base_S } , tok_which_takes , { base_S } , [ tok_copy_of ] , { base_S } , tok_type , { base_S } , tok_and_returns , { base_S } , tok_type , tok_dot;

vardecl = tok_let , { base_S } , identifier , { base_S } , tok_be , { base_S } , expr , tok_dot;

varassign = tok_set , { base_S } , identifier , { base_S } , tok_to , { base_S } , tok_be , expr , tok_dot;

stmt = printfn | readfn | fndecl | vardecl | varssign;
prog = { stmt };
