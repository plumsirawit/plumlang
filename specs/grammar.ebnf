letter = "A" | "B" | "C" | "D" | "E" | "F" | "G"
       | "H" | "I" | "J" | "K" | "L" | "M" | "N"
       | "O" | "P" | "Q" | "R" | "S" | "T" | "U"
       | "V" | "W" | "X" | "Y" | "Z" | "a" | "b"
       | "c" | "d" | "e" | "f" | "g" | "h" | "i"
       | "j" | "k" | "l" | "m" | "n" | "o" | "p"
       | "q" | "r" | "s" | "t" | "u" | "v" | "w"
       | "x" | "y" | "z";

digit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9";

symbol = "[" | "]" | "{" | "}" | "(" | ")" | "<" | ">"
       | "'" | '"' | "=" | "|" | "." | "," | ";" | "-" 
       | "+" | "*" | "?" | "\n" | "\t" | "\r" | "\f" | "\b";

character = letter | digit | symbol | "_" | " " ;
identifier = letter , { letter | digit | "_" } ;

S = { " " | "\n" | "\t" | "\r" | "\f" | "\b" } ;

termchr = "'" , character - "'" , "'";
termstr = '"' , character - '"' , { character - '"' } , '"' ;

printopt = ", followed by ", expr
         | ", except when ", expr;

printfn = "Print a line of " , expr , { printopt } , "."
        | "Print " , expr , { printopt }, ".";

article = "a" | "an" | "the";

readfn = "Read " , article, " " type , " " , identifier , "."
       | "Read " , expr , " " , type , [ "s" ] , " and store them in " , identifier , ".";

fndecl = "Define function " , identifier , " which takes " , [ article ] , [ " copy of " ] , type , " and returns " , type , ".";

vardecl = "Let " , identifier , " be " , expr , ".";

